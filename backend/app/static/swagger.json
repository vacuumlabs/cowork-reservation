{
    "openapi": "3.0.0",
    "info": {
        "description": "cowork-reservation system",
        "version": "1.0.0",
        "title": "Cowork-Reservation",
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        }
    },
    "servers": [
        {
            "url": "/"
        }
    ],
    "tags": [
        {
            "name": "Calendar",
            "description": "All endpoints related to the Calendar table"
        },
        {
            "name": "Tenant",
            "description": "All endpoints related to the Tenant table"
        },
        {
            "name": "Event",
            "description": "All endpoints related to the Event table"
        },
        {
            "name": "Room",
            "description": "All endpoints related to the Room table"
        }
    ],
    "paths": {
        "/tenants": {
            "get":{
                "tags":[
                    "Tenant"
                ],
                "summary":"",
                "parameters":[
                    {
                        "name": "association_id",
                        "in": "query",
                        "type": "int"
                    },
                    {
                        "name": "city",
                        "in": "query",
                        "type": "string",
                        "default": "Kosice",
                        "example": "Kosice"
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "type": "string",
                        "default": "city",
                        "example": "city"
                    },
                    {
                        "name": "_order",
                        "in": "query",
                        "type": "string",
                        "default": "asc",
                        "example": "asc"
                    },
                    {
                        "name": "_start",
                        "in": "query",
                        "type": "int",
                        "default": "0",
                        "example": "0"
                    },
                    {
                        "name": "_end",
                        "in": "query",
                        "type": "int",
                        "default": "100",
                        "example": "100"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"There should be array of tenants located in response",
                        "schema":{
                            "type":"array",
                            "properties":{
                                "object":{
                                    "id":{
                                        "type":"int",
                                        "format":"int32"
                                    },
                                    "name":{
                                        "type":"string"
                                    },
                                    "city":{
                                        "type":"string"
                                    },
                                    "email":{
                                        "type":"string",
                                        "format":"email"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tenant"
                ],
                "summary": "",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255
                                    },
                                    "city": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "default": "notFakeLocation1",
                                        "enum": [
                                            "notFakeLocation1",
                                            "notFakeLocation2",
                                            "notFakeLocation3"
                                        ]
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "minLength": 1,
                                        "maxLength": 255,
                                        "default": "email@NotFake.com",
                                        "enum": [
                                            "email@NotFake.com",
                                            "notFake@email.com",
                                            "not.fake@email.com"
                                        ]
                                    },
                                    "association_id": {
                                        "type": "int"
                                    }
                                },
                                "required": [
                                    "name",
                                    "city",
                                    "email",
                                    "association_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response should contain web page where change will be visible",
                        "schema": {
                            "$ref": "#/components/schemas/Tenant"
                        }
                    }
                }
            }
        },
        
        "/tenants/{id}": {
            "get": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Find tenant by ID",
                "parameters":[
                    {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "int",
                    "format": "int32"
                    }
                ],
                "security":[
                    {
                    "cookieAuth":[]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "There should be array with one tenant you requested",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Tenant"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Update tenant by ID",
                "parameters":[
                    {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "int",
                    "format": "int32"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Tenant"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "There should be array with one tenant you updated",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Tenant"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tenant"
                ],
                "summary": "",
                "parameters":[
                    {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "int",
                    "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "There should be array of tenants located in response",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Tenant"
                        }
                    }
                }
            }
        },
        "/calendars/": {
            "get": {
                "tags": [
                    "Calendar"
                ],
                "summary": "",
                "parameters":[
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "type": "int"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string"
                    },
                    {
                        "name": "google_id",
                        "in": "query",
                        "type": "int"
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "type": "string",
                        "default": "name",
                        "example": "name"
                    },
                    {
                        "name": "_order",
                        "in": "query",
                        "type": "string",
                        "default": "asc",
                        "example": "asc"
                    },
                    {
                        "name": "_start",
                        "type": "int",
                        "in": "query",
                        "default": 0,
                        "example": 0
                    },
                    {
                        "name": "_end",
                        "type": "int",
                        "in": "query",
                        "default": 100,
                        "example": 100
                    }
                ],
                "responses": {
                    "200": {
                        "description": "There should be array of calendars located in response",
                        "schema": {
                            "$ref": "#/components/schemas/Calendar"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Create calendar",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "tenant_id": {
                                        "type": "int"
                                    },
                                    "name": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255
                                    },
                                    "google_id": {
                                        "type": "int"
                                    }
                                },
                                "required": [
                                    "tenant_id",
                                    "name",
                                    "google_id"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response should contain newly created calendar",
                        "schema": {
                            "$ref": "#/components/schemas/Calendar"
                        }
                    }
                }
            }
        },
        "/calendars/{id}": {
            "get": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Find calendar by ID",
                "parameters":[
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "int",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "There should be one calendar you requested",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Calendar"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Calendar"
                ],
                "summary": "Update calendar",
                "parameters":[
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "int",
                    "format": "int32"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Calendar"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "There should be an updated calendar",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Calendar"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Calendar"
                ],
                "summary": "",
                "parameters":[
                    {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "int",
                    "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "There should be a empty object in response",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Calendar"
                        }
                    }
                }
            }
        },
        "/rooms": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "",
                "parameters":[
                    {
                        "name": "city",
                        "in": "query",
                        "type": "string",
                        "default": "Kosice",
                        "example": "Kosice"
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "type": "string",
                        "default": "city",
                        "example": "city"
                    },
                    {
                        "name": "_order",
                        "in": "query",
                        "type": "string",
                        "default": "asc",
                        "example": "asc"
                    },
                    {
                        "name": "_start",
                        "type": "int",
                        "in": "query",
                        "default": 0,
                        "example": 0
                    },
                    {
                        "name": "_end",
                        "type": "int",
                        "in": "query",
                        "default": 100,
                        "example": 100
                    }
                ],
                "responses": {
                    "200": {
                        "description": "There should be array of rooms located in response",
                        "schema": {
                            "type": "array",
                            "properties": {
                                "object": {
                                    "id": {
                                        "type": "int",
                                        "format": "int32"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "city": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Room"
                ],
                "summary": "Create room",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "city": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255
                                    },
                                    "capacity": {
                                        "type": "int",
                                        "format": "int32"
                                    },
                                    "equipment": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255
                                    },
                                    "building": {
                                        "type": "string",
                                        "minLength": 1,
                                        "maxLength": 255
                                    },
                                    "room_number": {
                                        "type": "int",
                                        "format": "int32"
                                    }
                                },
                                "required": [
                                    "city",
                                    "building",
                                    "capacity",
                                    "room_number"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response should contain web page where change will be visible",
                        "schema": {
                            "$ref": "#/components/schemas/Tenant"
                        }
                    }
                }
            }
        },
        "/rooms/{id}": {
            "get": {
                "tags": [
                    "Room"
                ],
                "summary": "Find room by ID",
                "parameters":[
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "int",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "There should be array with one room you requested",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Room"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Room"
                ],
                "summary": "Update room",
                "parameters":[
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "int",
                    "format": "int32"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Room"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "There should be array with one room you requested",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Room"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Room"
                ],
                "summary": "",
                "parameters":[
                    {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "int",
                    "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "There should be array of rooms located in response",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Room"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "",
                "parameters":[
                    {
                        "name": "tenant_id",
                        "in": "query",
                        "type": "int"
                    },
                    {
                        "name": "room_id",
                        "in": "query",
                        "type": "int"
                    },
                    {
                        "name": "_sort",
                        "in": "query",
                        "type": "string",
                        "example": "room_id"
                    },
                    {
                        "name": "_order",
                        "in": "query",
                        "type": "string",
                        "default": "asc",
                        "example": "asc"
                    },
                    {
                        "name": "_start",
                        "type": "int",
                        "in": "query",
                        "default": 0,
                        "example": 0
                    },
                    {
                        "name": "_end",
                        "type": "int",
                        "in": "query",
                        "default": 100,
                        "example": 100
                    }
                ],
                "responses": {
                    "200": {
                        "description": "There should be array of events located in response",
                        "schema": {
                            "$ref": "#/components/schemas/Event"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Event"
                ],
                "summary": "Create event",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Response should contain newly created event",
                        "schema": {
                            "$ref": "#/components/schemas/Event"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "tags": [
                    "Event"
                ],
                "summary": "Find event by ID",
                "parameters":[
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "int",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "There should be one event you requested",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Event"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Event"
                ],
                "summary": "Update event",
                "parameters":[
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "int",
                    "format": "int32"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "There should be an updated event",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Event"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Event"
                ],
                "summary": "",
                "parameters":[
                    {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "int",
                    "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{}",
                        "schema": 
                        {
                            "$ref": "#/components/schemas/Event"
                        }
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "cookieAuth":{
                "type":"apiKey",
                "in": "cookie",
                "name": "login_token"
            }
        },
        "schemas": {
            "Calendar": {
                "properties": {
                    "tenant_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Foreing key from Tenant table"
                    },
                    "name": {
                        "type": "string",
                        "max_length": 255,
                        "nullable": "False",
                        "description": ""
                    },
                    "google_id": {
                        "type": "string",
                        "max_length": 255,
                        "nullable": "False",
                        "description": ""
                    }
                }
            },
            "Tenant": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "primary_key": "True"
                    },
                    "name": {
                        "type": "string",
                        "max_length": 255,
                        "nullable": "False",
                        "description": ""
                    },
                    "city": {
                        "type": "string",
                        "max_length": 255,
                        "nullable": "False",
                        "description": ""
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "max_length": 255,
                        "nullable": "False",
                        "description": ""
                    }
                }
            },
            "Event": {
                "properties": {
                    "calendar_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Foreing key from Calendar table"
                    },
                    "room_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Foreing key from Room table"
                    },
                    "name": {
                        "type": "string",
                        "max_length": 255,
                        "nullable": "False",
                        "description": ""
                    },
                    "start": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": "False",
                        "description": ""
                    },
                    "end": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": "False",
                        "description": ""
                    },
                    "google_id": {
                        "type": "string",
                        "max_length": 255,
                        "nullable": "False",
                        "description": ""
                    },
                    "tenant_id": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Foreing key from Tenant table"
                    },
                    "status": {
                        "type": "boolean",
                        "description": ""
                    }
                }
            },
            "Room": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int32",
                        "primary_key": "True"
                    },
                    "city": {
                        "type": "string",
                        "max_length": 255,
                        "nullable": "False",
                        "description": ""
                    },
                    "capacity": {
                        "type": "int",
                        "format": "int32",
                        "nullable": "False",
                        "description": ""
                    },
                    "equipment": {
                        "type": "string",
                        "max_length": 255,
                        "description": ""
                    },
                    "building": {
                        "type": "string",
                        "max_length": 255,
                        "description": ""
                    },
                    "room_number": {
                        "type": "int",
                        "format": "int32",
                        "nullable": "False",
                        "description": ""
                    }
                }
            }
        }
    }
}